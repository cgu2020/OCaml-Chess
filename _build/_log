### Starting build.
# Target: chess_board.mli.depends, tags: { package(ANSITerminal), package(ounit2), package(yojson), extension:mli, file:chess_board.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -modules chess_board.mli > chess_board.mli.depends # cached
# Target: tile.mli.depends, tags: { package(ANSITerminal), package(ounit2), package(yojson), extension:mli, file:tile.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -modules tile.mli > tile.mli.depends # cached
# Target: tile.cmi, tags: { package(ANSITerminal), package(ounit2), package(yojson), byte, compile, extension:mli, file:tile.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -o tile.cmi tile.mli # cached
# Target: chess_board.cmi, tags: { package(ANSITerminal), package(ounit2), package(yojson), byte, compile, extension:mli, file:chess_board.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -o chess_board.cmi chess_board.mli # cached
# Target: chess_board.ml.depends, tags: { package(ANSITerminal), package(ounit2), package(yojson), extension:ml, file:chess_board.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -modules chess_board.ml > chess_board.ml.depends
+ ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -modules chess_board.ml > chess_board.ml.depends
File "chess_board.ml", line 67, characters 2-5:
67 |   (*)
       ^^^
Warning 1: this `(*' is the start of a comment.
Hint: Did you forget spaces when writing the infix operator `( * )'?
# Target: chess_board.cmo, tags: { package(ANSITerminal), package(ounit2), package(yojson), byte, compile, extension:cmo, extension:ml, file:chess_board.cmo, file:chess_board.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -o chess_board.cmo chess_board.ml
+ ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -o chess_board.cmo chess_board.ml
File "chess_board.ml", line 67, characters 2-5:
67 |   (*)
       ^^^
Warning 1: this `(*' is the start of a comment.
Hint: Did you forget spaces when writing the infix operator `( * )'?
File "chess_board.ml", lines 77-79, characters 2-17:
77 | ..match get_piece p with 
78 |   | King ->  false
79 |   | Queen -> true
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(Empty|Rook|Bishop|Knight|Pawn)
# Target: game_logic.mli.depends, tags: { package(ANSITerminal), package(ounit2), package(yojson), extension:mli, file:game_logic.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -modules game_logic.mli > game_logic.mli.depends # cached
# Target: game_logic.cmi, tags: { package(ANSITerminal), package(ounit2), package(yojson), byte, compile, extension:mli, file:game_logic.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -o game_logic.cmi game_logic.mli # cached
# Target: game_logic.ml.depends, tags: { package(ANSITerminal), package(ounit2), package(yojson), extension:ml, file:game_logic.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -modules game_logic.ml > game_logic.ml.depends # cached
# Target: game_logic.cmo, tags: { package(ANSITerminal), package(ounit2), package(yojson), byte, compile, extension:cmo, extension:ml, file:game_logic.cmo, file:game_logic.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -o game_logic.cmo game_logic.ml # cached
# Target: tile.ml.depends, tags: { package(ANSITerminal), package(ounit2), package(yojson), extension:ml, file:tile.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -modules tile.ml > tile.ml.depends # cached
# Target: tile.cmo, tags: { package(ANSITerminal), package(ounit2), package(yojson), byte, compile, extension:cmo, extension:ml, file:tile.cmo, file:tile.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -o tile.cmo tile.ml
# Target: main.ml.depends, tags: { package(ANSITerminal), package(ounit2), package(yojson), extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -modules main.ml > main.ml.depends # cached
# Target: main.cmo, tags: { package(ANSITerminal), package(ounit2), package(yojson), byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -o main.cmo main.ml # cached
# Compilation successful.
